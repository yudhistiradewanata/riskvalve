@using SharedLayer
@{
    ViewData["Title"] = "Inspection";
    var limitState = ViewData["CurrentConditionLimitStateData"] as List<CurrentConditionLimitStateData>;
    var inspectionEffectivenessStates = ViewData["InspectionEffectivenessData"] as List<InspectionEffectivenessData>;
    var inspectionMethods = ViewData["InspectionMethodData"] as List<InspectionMethodData>;
    var isValveRepairedStates = ViewData["IsValveRepairedData"] as List<IsValveRepairedData>;
    var baseurl = Url.Action("", "");
    var urlupdateinspection = Url.Action("UpdateInspection", "Inspection");
    var urladdinspection = Url.Action("AddInspection", "Inspection");
    var urldeleteinspection = Url.Action("DeleteInspection", "Inspection");
    var urlgetinspectiondetail = Url.Action("GetInspectionDetail", "Inspection");
    var urlgetassetdetail = Url.Action("GetAssetDetail", "AssetRegister");
    var urlinspectionprint = Url.Action("PrintInspection", "Inspection");
}
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@{
    var tokens = Xsrf.GetAndStoreTokens(Context);
}
<link rel="stylesheet" href="~/css/print.css" asp-append-version="true" />

<div class="container-fluid">
    <div class="row">
        <div class="sidebar border border-right col-md-3 col-lg-2 p-0 bg-body-tertiary non-printable">
            <partial name="InspectionAssessmentSidebar" />
        </div>
        @* <main class="col-md-9 ms-sm-auto col-lg-10 p-0 subheader-negative-margin with-bg-image"
            style="background-image:url('@baseurl/lib/images/u45.png')"> *@
        <main class="col-md-9 ms-sm-auto col-lg-10 p-0 subheader-negative-margin with-bg-image">
            <div>
                <ul class="nav nav-tabs nav-tab-menus" id="inspectiontabheader" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" href="#welcome" data-bs-toggle="tab" data-bs-target="#welcome"
                            type="button" role="tab">
                            Welcome
                        </a>
                    </li>
                    <li class="nav-item" id="template_inspection_header">
                        <a class="nav-link" href="#inspection1" data-bs-toggle="tab" data-bs-target="#inspection-form"
                            type="button" role="tab">
                            New Inspection WIB-PSV-V05A-4
                            <button type="button" class="btn-close-inspection"><i
                                    class="fa-solid fa-xmark"></i></button>
                        </a>
                    </li>
                </ul>
                <div class="tab-content inspection-tab" id="tabcontentcontainer">
                    <div class="tab-pane show active" role="tabpanel" id="welcome">
                        <div class="sub-container">
                            <h1>Welcome to Inspection</h1>
                            <p>To start adding inspection data, please choose valve asset in the tree view.</p>
                        </div>
                    </div>
                    <div class="tab-pane show active" role="tabpanel" id="template_inspection">
                        <form class="inspection-form printable">
                            <div class="box">
                                <div class="subheader m-0">
                                    <b>Asset Information</b>
                                </div>
                                <div class="sub-container">
                                    <div class="form-container">
                                        <div class="form-grid">
                                            <div class="form-group-inline">
                                                <label for="field-inspection-assetid">Asset ID</label>
                                                <input type="text" class="form-control" id="field-inspection-assetid"
                                                    readonly name="AssetID">
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="field-inspection-valvetype">Valve Type</label>
                                                <input type="text" class="form-control" id="field-inspection-valvetype"
                                                    readonly>
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="field-inspection-tagno">Tag No</label>
                                                <input type="text" class="form-control" id="field-inspection-tagno"
                                                    readonly>
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="field-inspection-manufacturer">Manufacturer</label>
                                                <input type="text" class="form-control"
                                                    id="field-inspection-manufacturer" readonly>
                                            </div>
                                            <div class="form-group-inline" style="display: none;">
                                                <label for="field-inspection-equipmentname">Equipment Name</label>
                                                <input type="text" class="form-control"
                                                    id="field-inspection-equipmentname" readonly>
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="field-inspection-bodymaterial">Body Material</label>
                                                <input type="text" class="form-control"
                                                    id="field-inspection-bodymaterial" readonly>
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="businessarea">Business Area</label>
                                                <input type="text" class="form-control" id="businessarea" readonly>
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="bodymodel">Body Model</label>
                                                <input type="text" class="form-control" id="bodymodel" readonly>
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="platform">Platform</label>
                                                <input type="text" class="form-control" id="platform" readonly>
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="endconnection">End Connection</label>
                                                <input type="text" class="form-control" id="endconnection" readonly>
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="parentequipmentno">Parent Equipment No.</label>
                                                <input type="text" class="form-control" id="parentequipmentno" readonly>
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="serialno">Serial No.</label>
                                                <input type="text" class="form-control" id="serialno" readonly>
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="parentequipmentdescription">Parent Equipment
                                                    Description</label>
                                                <input type="text" class="form-control" id="parentequipmentdescription"
                                                    readonly>
                                            </div>
                                            <div class="form-group-inline" style="display: none;">
                                                <label for="usagetype">Usage Type</label>
                                                <input type="text" class="form-control" id="usagetype" readonly>
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="installationdate">Installation Date</label>
                                                <input type="text" class="form-control" id="installationdate" readonly>
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="size">Size (inch)</label>
                                                <input type="text" class="form-control" id="size" readonly>
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="pidno">PID No</label>
                                                <input type="text" class="form-control" id="pidno" readonly>
                                            </div>
                                            <div class="form-group-inline">
                                                <label for="classrating">Class Rating</label>
                                                <input type="text" class="form-control" id="classrating" readonly>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="box">
                                <div class="subheader m-0">
                                    <b>Inspection Information</b>
                                </div>
                                <div class="sub-container">
                                    <div class="form-container">
                                        <div class="form-grid">
                                            <input type="hidden" name="Id" id="data-id">
                                            <div class="form-group ">
                                                <label for="field-inspection-valvetagno">Valve Tag No</label>
                                                <input type="text" class="form-control" id="field-inspection-valvetagno"
                                                    readonly>
                                            </div>
                                            <div class="form-group ">
                                                <label for="field-inspection-current-condition-limit-state-a">Current
                                                    Condition Leakage to Atmosphere</label>
                                                <select class="form-control"
                                                    id="field-inspection-current-condition-limit-state-a"
                                                    name="CurrentConditionLeakeageToAtmosphereID">
                                                    @if(limitState != null)
                                                    {
                                                        foreach (var item in limitState)
                                                        {
                                                            <option value="@item.Id">@item.CurrentConditionLimitState</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                            <div class="form-group ">
                                                <label for="field-inspection-date">Inspection Date</label>
                                                <input id="field-inspection-date" type="text"
                                                    class="form-control datepicker" name="InspectionDate" required />
                                            </div>
                                            <div class="form-group ">
                                                <label for="field-inspection-current-condition-limit-state-b">Current
                                                    Condition Failure of Function</label>
                                                <select class="form-control"
                                                    id="field-inspection-current-condition-limit-state-b"
                                                    name="CurrentConditionFailureOfFunctionID">
                                                    @if(limitState != null)
                                                    {
                                                        foreach (var item in limitState)
                                                        {
                                                            <option value="@item.Id">@item.CurrentConditionLimitState</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                            <div class="form-group ">
                                                <label for="field-inspection-inspection-method">Inspection
                                                    Method</label>
                                                <select class="form-control" id="field-inspection-inspection-method"
                                                    name="InspectionMethodID">
                                                    @if(inspectionMethods != null)
                                                    {
                                                        foreach (var item in inspectionMethods)
                                                        {
                                                            <option value="@item.Id">@item.InspectionMethod</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                            <div class="form-group ">
                                                <label for="field-inspection-current-condition-limit-state-c">Current
                                                    Condition Passing Across Valve</label>
                                                <select class="form-control"
                                                    id="field-inspection-current-condition-limit-state-c"
                                                    name="CurrentConditionPassingAcrossValveID">
                                                    @if(limitState != null)
                                                    {
                                                        foreach (var item in limitState)
                                                        {
                                                            <option value="@item.Id">@item.CurrentConditionLimitState</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                            <div class="form-group ">
                                                <label for="field-inspection-effectiveness">Inspection
                                                    Effectiveness</label>
                                                <select class="form-control" id="field-inspection-effectiveness"
                                                    name="InspectionEffectivenessID">
                                                    @if(inspectionEffectivenessStates != null)
                                                    {
                                                        foreach (var item in inspectionEffectivenessStates)
                                                        {
                                                            <option value="@item.Id">@item.Effectiveness</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                            <div class="form-group ">
                                                <label for="field-inspection-function-condition">Function
                                                    Condition</label>
                                                <input type="text" class="form-control"
                                                    id="field-inspection-function-condition" name="FunctionCondition"
                                                    required>
                                            </div>
                                            <div class="form-group">
                                                <label for="field-inspection-description">Inspection Description</label>
                                                <textarea class="form-control" id="field-inspection-description"
                                                    rows="12" name="InspectionDescription"></textarea>
                                            </div>
                                            <div class="form-group">
                                                <div class="row">
                                                    <div class="form-group col-md-12 mb-2">
                                                        <label for="field-inspection-test-pressure-if-any">Test Pressure
                                                            if Any</label>
                                                        <input type="text" name="TestPressureIfAny" class="form-control"
                                                            id="field-inspection-test-pressure-if-any">
                                                    </div>
                                                    <div class="col-md-12">
                                                        <label for="field-inspection-image">Inspection Image</label>
                                                        <div class="gallery-input">
                                                            <input type="file" class="form-control image-gallery-upload"
                                                                id="field-inspection-image" multiple>
                                                            <div class="preview-image-gallery">
                                                                <label class="add-image" for="field-inspection-image"><i
                                                                        class="fa-solid fa-file-circle-plus"></i></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="non-printable">
                                        <div class="box-footer">
                                            <button type="button" class="btn submit-button" id="btn-submit"
                                                onclick="submitForm(this)">Save</button>
                                            <button type="button" class="btn print-button" id="btn-print"
                                                onclick="printForm(this)">Print</button>
                                            <button type="button" class="btn delete-button" id="btn-delete"
                                                onclick="deleteForm(this)">Delete</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
    </div>
</div>
</div>

@section Scripts {
    <script>
        var requestVerificationToken = '@tokens.RequestToken';
        const urlParams = new URLSearchParams(window.location.search);
        const idParam = Number(urlParams.get('inspectionid'));
        const assetIdParam = Number(urlParams.get('assetid'));
        $(document).ready(function () {
            $('.btn-add-new-inspection').click(addTab);
            if (idParam) {
                $('.btn-add-new-inspection[attr-inspection-id=' + idParam + ']').trigger('click')
            } else if (assetIdParam) {
                $('.btn-add-new-inspection[attr-id=' + assetIdParam + ']').first().trigger('click')
            }
        });

        $(document).on('click', '.btn-close-inspection', function () {
            const ctr = $(this).closest('a').attr('tab-num')
            close_inspection(ctr);
        })

        function submitForm(el) {
            const form = $(el).closest('form.inspection-form')
            const equipmentId = $(el).closest('.tab-pane').attr('equipment-id')
            const ctr = $(el).closest('.tab-pane').attr('tab-num')
            const nativeForm = form[0]
            const formData = new FormData(nativeForm);
            if (form.valid()) {
                if (form.hasClass('history-form')) {
                    // update
                    $.ajax({
                        url: '@urlupdateinspection',
                        type: 'POST', // or 'GET' depending on your form method
                        headers: {
                            'RequestVerificationToken': requestVerificationToken
                        },
                        data: formData,
                        contentType: false,
                        processData: false,
                        success: function (apiresult) {
                            if(apiresult.isSuccess){
                                alert(apiresult.message)
                                var response = apiresult.data;
                                form.addClass('history-form')
                                // Handle success response
                                $('.btn-add-new-inspection[attr-inspection-id='+response.id+']').html(response.inspectionDate)
                            } else {
                                alert(apiresult.message)
                            }
                        },
                        error: function (xhr, status, error) {
                            alert('Inspection date already exist')
                        }
                    });
                } else {
                    // add new
                    $.ajax({
                        url: '@urladdinspection',
                        type: 'POST', // or 'GET' depending on your form method
                        headers: {
                            'RequestVerificationToken': requestVerificationToken
                        },
                        data: formData,
                        contentType: false,
                        processData: false,
                        success: function (apiresult) {
                            if(apiresult.isSuccess){
                                alert(apiresult.message)
                                var res = apiresult.data;
                                form.addClass('history-form')
                                $('ul[equipment-id="' + equipmentId + '"] li').eq(0).after(`
                                    <li class="treeview">
                                        <a class="btn-add-new-inspection" history-button="" 
                                        attr-id="${res.asset.id}" attr-inspection-id="${res.id}" 
                                        attr-name="${res.asset.tagNo} ${res.inspectionDate}" 
                                        attr-sidebar-level="4" 
                                        attr-find-inspection="${res.asset.businessArea}" 
                                        attr-find-platform="${res.asset.platform}" 
                                        attr-find-equipment="${res.asset.tagNo}" 
                                        attr-find-imr="NEW"
                                        onclick="addTab.apply(this)"
                                        >
                                            ${res.inspectionDate} (NEW)
                                        </a>
                                    </li>
                                `)

                                form.find('.preview-image-gallery .single-image').remove()
                                form.find('.preview-image-gallery input[type=file]').remove()
                                fetchHistoryData({
                                    id: res.id,
                                    counter: ctr
                                })
                            } else {
                                alert(apiresult.message)
                            }
                        },
                        error: function (xhr, status, error) {
                            // Handle error
                            alert('error submitting the form')
                        }
                    });
                }
            }
        }

        function deleteForm(el) {
            const form = $(el).closest('form.inspection-form')

            const id = form.find('#data-id').val()
            const tabId = $(el).closest('.tab-pane').attr('id')
            const ctr = $(el).closest('.tab-pane').attr('tab-num')

            if (confirm('Are you sure you want to delete this data?')) {
                $.ajax({
                    url: '@urldeleteinspection',
                    type: 'POST', // or 'GET' depending on your form method
                    data: {
                        Id: id
                    },
                    headers: {
                        'RequestVerificationToken': requestVerificationToken
                    },
                    success: function (apiresponse) {
                        if(apiresponse.isSuccess){
                            alert(apiresponse.message)
                            close_inspection(ctr, true)
                            $('.btn-add-new-inspection[attr-inspection-id=' + id + ']').closest('li').remove()
                        } else {
                            alert(apiresponse.message)
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('Error deleting data')
                    }
                });
            }
        }

        function deleteFromTab(id, name) {
            if (confirm('Are you sure you want to delete ' + name + '?')) {
                $.ajax({
                    url: '@urldeleteinspection',
                    type: 'POST', // or 'GET' depending on your form method
                    data: {
                        Id: id
                    },
                    headers: {
                        'RequestVerificationToken': requestVerificationToken
                    },
                    success: function (response) {
                        alert('Data successfully deleted')
                        $('.btn-add-new-inspection[attr-inspection-id=' + id + ']').closest('li').remove()
                    },
                    error: function (xhr, status, error) {
                        alert('Error deleting data')
                    }
                });
            }
        }

        function printForm(el) {
            const form = $(el).closest('form.inspection-form')
            const id = form.find('#data-id').val()
            window.open('@urlinspectionprint/' + id, '_blank');
        }

        function fetchAssetData({ id, counter }) {
            $.ajax({
                url: '@urlgetassetdetail',
                type: 'GET',
                data: { id },
                headers: {
                    'RequestVerificationToken': requestVerificationToken
                },
                success: function (apiresult) {
                    if (apiresult.isSuccess) {
                        var data = apiresult.data;
                        fillAssetInfo({ counter, data })
                    } else {
                        alert(apiresult.message);
                        $('#inspectionheader' + counter).remove();
                        $('#inspection' + counter).remove();
                        moveToLastTab()
                    }
                },
                error: function (error) {
                    alert('Valve Tag not found');
                    $('#inspectionheader' + counter).remove();
                    $('#inspection' + counter).remove();
                    moveToLastTab()
                }
            });
        }

        function fetchHistoryData({ id, counter }) {
            $.ajax({
                url: '@urlgetinspectiondetail',
                type: 'GET',
                data: { id },
                headers: {
                    'RequestVerificationToken': requestVerificationToken
                },
                success: function (apiresult) {
                    if(apiresult.isSuccess){
                        var data = apiresult.data;
                        fillAssetInfo({
                            counter, data: data.asset
                        })

                        // fill history data
                        $('#field-inspection-date' + counter).val(data.inspectionDate)
                        $('#field-inspection-inspection-method' + counter).val(data.inspectionMethodID)
                        $('#field-inspection-current-condition-limit-state-a' + counter).val(data.currentConditionLeakeageToAtmosphereID)
                        $('#field-inspection-current-condition-limit-state-b' + counter).val(data.currentConditionFailureOfFunctionID)
                        $('#field-inspection-current-condition-limit-state-c' + counter).val(data.currentConditionPassingAcrossValveID)
                        $('#field-inspection-effectiveness' + counter).val(data.inspectionEffectivenessID)
                        $('#field-inspection-function-condition' + counter).val(data.functionCondition)
                        $('#field-inspection-description' + counter).val(data.inspectionDescription)
                        $('#field-inspection-test-pressure-if-any' + counter).val(data.testPressureIfAny)

                        let galleryHtml = ''
                        data.inspectionFiles.forEach(i => {
                            galleryHtml += `<input type="hidden" identifier="delete-gallery-${i.id}" name="deletedImageIDs[${i.id}]" value="0">
                                                    <div class="single-image" data-identifier="gallery-${i.id}">
                                                        <img src="/${i.filePath}"">
                                                        <div class="delete-image-btn" onclick="deleteGalleryImage('gallery-${i.id}')">
                                                            <i class="fa-solid fa-xmark"></i>
                                                        </div>
                                                    </div>
                                                    `
                        })

                        //fill image
                        $('#inspection' + counter).find('.preview-image-gallery').append(galleryHtml)
                        $('#inspection' + counter).find('form').addClass('history-form')

                        //fill ID
                        $('#inspection' + counter).find('#data-id').val(id)
                    } else {
                        alert(apiresult.message);
                        $('#inspectionheader' + counter).remove();
                        $('#inspection' + counter).remove();
                        moveToLastTab()
                    }
                },
                error: function (error) {
                    alert('History not found');
                    $('#inspectionheader' + counter).remove();
                    $('#inspection' + counter).remove();
                    moveToLastTab()
                }
            });
        }

        function fillAssetInfo({ counter, data }) {
            $('#field-inspection-assetid' + counter).val(data.id)
            $('#field-inspection-valvetype' + counter).val(data.valveType)
            $('#field-inspection-tagno' + counter).val(data.tagNo)
            $('#field-inspection-valvetagno' + counter).val(data.tagNo)
            $('#field-inspection-manufacturer' + counter).val(data.manufacturer)
            $('#field-inspection-equipmentname' + counter).val('')
            $('#field-inspection-bodymaterial' + counter).val(data.bodyMaterial)
            $('#businessarea' + counter).val(data.businessArea)
            $('#bodymodel' + counter).val(data.bodyModel)
            $('#platform' + counter).val(data.platform)
            $('#endconnection' + counter).val(data.endConnection)
            $('#parentequipmentno' + counter).val(data.parentEquipmentNo)
            $('#serialno' + counter).val(data.serialNo)
            $('#parentequipmentdescription' + counter).val(data.parentEquipmentDescription)
            $('#usagetype' + counter).val('')
            $('#installationdate' + counter).val(data.installationDate)
            $('#size' + counter).val(data.size)
            $('#pidno' + counter).val(data.pidNo)
            $('#classrating' + counter).val(data.classRating)
        }

        let template_inspection = $('#template_inspection');
        let template_inspection_html = template_inspection.html();
        template_inspection.remove();
        let template_inspection_header = $('#template_inspection_header');
        let template_inspection_header_html = template_inspection_header.html();
        template_inspection_header.remove();

        let idx = 0;
        function addTab() {
            let ctr = idx;

            let id = $(this).attr('attr-id');
            const equipmentId = id
            let isHistory = false
            let name = $(this).attr('attr-name');
            let tabInspectionId = 0
            if ($(this).attr('attr-inspection-id')) {
                isHistory = true
                id = $(this).attr('attr-inspection-id')
                tabInspectionId = id
            } else {
                name = `New Inspection ${name}`
            }
            if (tabInspectionId > 0) {
                if ($('.tab-pane[tab-inspection-id="' + tabInspectionId + '"]').length > 0) {
                    alert('This inspection already exist in the tab');
                    return;
                }
            }

            let tabheadercontainer = $('#inspectiontabheader');
            let tabcontentcontainer = $('#tabcontentcontainer');
            tabheadercontainer.append('<li id="inspectionheader' + ctr + '"><a href="#inspection' + ctr + '" data-bs-toggle="tab" class="nav-link" data-bs-target="#inspection' + ctr + '" type="button" role="tab" tab-num="' + ctr + '">' + name + ' <button type="button" class="btn-close-inspection"><i class="fa-solid fa-xmark"></i></button></a></li>');
            tabcontentcontainer.append('<div class="tab-pane" tab-inspection-id="' + tabInspectionId + '" equipment-id="' + equipmentId + '" id="inspection' + ctr + '" tab-num="' + ctr + '">' + template_inspection_html + '</div>');
            let tabcontent = tabcontentcontainer.find('.form-control');
            tabcontent.each(function () {
                let name = $(this).attr('id') + ctr;
                $(this).attr('id', name);
            });
            //find button submit then add ctr on id
            let submitbtn = tabcontentcontainer.find('.form-submit');
            submitbtn.each(function () {
                let name = $(this).attr('id') + ctr;
                $(this).attr('id', name);
            })

            //update the label also
            let tabcontentlabel = tabcontentcontainer.find('label');
            tabcontentlabel.each(function () {
                let label = $(this).attr('for') + ctr;
                $(this).attr('for', label);
            });

            $('#inspectionheader' + ctr).find('a').click();

            isHistory ? fetchHistoryData({
                id,
                counter: ctr
            }) : fetchAssetData({
                id,
                counter: ctr
            })

            initDatepicker()

            moveToLastTab()

            idx++;

            $('.image-gallery-upload').on('change', function () {
                imagesPreview(this);
            });
        }
    </script>
}
